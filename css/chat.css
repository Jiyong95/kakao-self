.header-wrapper {
  position: fixed;
  top: 0px;
  width: 100%;
  padding: 5px 0px;
  background-color: white;
  z-index: 1;
}
.chat-body {
  padding: 0;
  padding-top: 130px;
}

.chat-body .status-bar {
  padding-top: 10px;
  padding-left: 20px;
  padding-right: 20px;
}
.chat-body .header {
  padding: 0px 20px;
}

.chat-body {
  background-image: url("../images/chatBg2.png");
  min-height: 1000vh;
  /* view height 즉 보이는 것 1000%로 */
}

.chat-main .chat-screen {
  padding-top: 10px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.chat-main .chat__timestamp {
  opacity: 0.7;
  font-size: 18px;
  margin-bottom: 20px;
  font-weight: 700;
}

.in-message__avatar {
  width: 50px;
}
.in-message {
  display: flex;
  margin-bottom: 40px;
  align-self: flex-start;
  /* align-self는 in-message에 해당되는 것. */
  padding-left: 10px;
  align-items: flex-start;
  /* align-items는 in-message에 속하는 component. 
  img와 div 2개가 수직을 기준으로 
  flex-start는 위 div기준.
  center는 img가 div두개의 가운데
  flex-end는 아래 div기준.
  */
}

.in-message .in-message__text {
  width: 80%;
  /* in-message 영역의 크기가 80% + chat-screen justify:center 
  width로 div의 영역크기를 조절해주는 느낌.*/
  padding-left: 14px;
}

.text__part1 {
  font-size: 18px;
  margin-bottom: 10px;
}

.text__part2 .in-message__saying {
  font-size: 20px;
  background-color: #ffffff;
  padding: 5px 10px;
  /* span태그여서 padding적용시키면 범위가 padding까지 확장되는 것이 아니라
  범위는 text인데 밖으로 padding이 적용되는 것임.
  그래서 범위를 padding까지 포함시키려면 display:block하면 됨. */
  border-radius: 10px;
  border-top-left-radius: 0px;
}

.text__part2 {
  position: relative;
}

.text__part2 .in-message__timestamp {
  font-size: 10px;
  position: absolute;
  bottom: -8px;
  margin-left: 4px;
}

.out-message {
  position: relative;
  align-self: flex-end;
  padding-right: 10px;
}

.out-message__timestamp {
  position: absolute;
  font-size: 10px;
  bottom: -2px;
  left: -25px;
}
.out-message__saying {
  font-size: 20px;
  background-color: #ffea34;
  padding: 5px 10px;
  border-radius: 10px;
  border-top-right-radius: 0px;
  display: block;
}

.chat__write--container {
  position: fixed;
  margin: 0 auto;
  /* fixed된 component 가운데 정렬법. */
  bottom: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.write__column1 {
  position: absolute;
  left: 10px;
}
.write__column2 {
  position: absolute;
  right: 10px;
}

.chat__write {
  margin: 0 auto;
  bottom: 0px;
  width: 100%;
  border-radius: 0;
  padding: 20px 60px;
  font-size: 14px;
  border: none;
  transition: all 0.5s ease-in-out;
}
/* transition은 
전 - transition적용할것, 적용효과 와
후(focus 등의 상태) - 적용할것의 다른 상태 기입. */
.chat__write:focus {
  outline: none;
  width: 80%;
  transform: translateY(-100px);
  border-radius: 40px;
  animation: float 3s linear infinite forwards;
}

@keyframes float {
  0% {
    /* transform: translateY(-100px); */
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  50% {
    /* transform: translateY(-110px); */
    box-shadow: 0 30px 60px -60px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  100% {
    /* transform: translateY(-100px); */
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
}

.chat__icon {
  font-size: 18px;
  transition: opacity 0.5s ease-in-out;
}

.chat__write:focus ~ .chat__icon {
  opacity: 0;
}
/* chat__write가 focus될 때 chat write다음 chat__icon클래스를 가리킴.
chat__write클래스 전은 가리키지 못하고 다음부분을 가리킬 수 있기 때문에
코드순서를 변경해준 것.
*/
